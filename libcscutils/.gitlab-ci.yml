default:
    interruptible: true

before_script:
#       - if [ -x /usr/bin/apt ]; then (apt update; apt install --yes git); fi
        - git submodule sync
        - git submodule init
        - git submodule update --recursive --init

stages:
        - build
# Too Old
# ubuntu1204-gcc:
#         stage: build
#         image: local:ubuntu-precise-base
#         script:
#                 - apt-get install --yes cmake libhdf5-serial-dev zlib1g-dev libbz2-dev liblzma-dev
#                 - mkdir -p build
#                 - cd build
#                 - cmake ../ -DDEBUG=ON
#                 - make
#
# ubuntu1404-gcc:
#         stage: build
#         image: local:ubuntu-trusty-base
#         script:
#                 - apt-get install --yes cmake libhdf5-dev zlib1g-dev libbz2-dev liblzma-dev
#                 - mkdir -p build
#                 - cd build
#                 - cmake ../ -DDEBUG=ON
#                 - make
#
include: '/misc/cmake-runs.yml'

ubuntu1604-gcc:
        stage: build
        image: gitlab.mpi-magdeburg.mpg.de/ci-images/minimal/ubuntu:xenial
        script:
                - apt update; apt install --yes git
                - apt-get install --yes cmake libhdf5-dev zlib1g-dev libbz2-dev liblzma-dev
                - mkdir -p build
                - cd build
                - cmake ../ -DDEBUG=ON
                - make
                - make test

ubuntu1804-gcc:
        stage: build
        image: gitlab.mpi-magdeburg.mpg.de/ci-images/minimal/ubuntu:bionic
        script:
                - apt update; apt install --yes git
                - apt-get install --yes cmake libhdf5-dev zlib1g-dev libbz2-dev liblzma-dev
                - mkdir -p build
                - cd build
                - cmake ../ -DDEBUG=ON
                - make
                - make test

ubuntu1804-gcc-nofortran:
        stage: build
        image: gitlab.mpi-magdeburg.mpg.de/ci-images/minimal/ubuntu:bionic
        script:
                - apt update; apt install --yes git
                - apt-get install --yes cmake libhdf5-dev zlib1g-dev libbz2-dev liblzma-dev
                - mkdir -p build
                - cd build
                - cmake ../ -DDEBUG=ON -DFORTRAN=OFF
                - make
                - make test

ubuntu1804-clang:
        stage: build
        image: gitlab.mpi-magdeburg.mpg.de/ci-images/minimal/ubuntu:bionic
        script:
                - apt update; apt install --yes git
                - apt-get install --yes cmake clang-9 libhdf5-dev zlib1g-dev libbz2-dev liblzma-dev
                - mkdir -p build
                - cd build
                - CC=clang-9 CXX=clang++-9 cmake ../ -DDEBUG=ON -DFORTRAN=OFF
                - make
                - make test

ubuntu2004-gcc:
        stage: build
        image: gitlab.mpi-magdeburg.mpg.de/ci-images/minimal/ubuntu:focal
        script:
                - apt update; apt install --yes git
                - apt-get install --yes cmake libhdf5-dev zlib1g-dev libbz2-dev liblzma-dev libzstd-dev
                - mkdir -p build
                - cd build
                - cmake ../ -DDEBUG=ON
                - make
                - make test

ubuntu2004-gcc10:
        stage: build
        image: gitlab.mpi-magdeburg.mpg.de/ci-images/minimal/ubuntu:focal
        script:
                - apt update; apt install --yes git
                - apt-get install --yes cmake gcc-10 g++-10 gfortran-10 libhdf5-dev zlib1g-dev libbz2-dev liblzma-dev libzstd-dev
                - mkdir -p build
                - cd build
                - CC=gcc-10 CXX=g++-10 FC=gfortran-10 cmake ../ -DDEBUG=ON
                - make
                - make test

ubuntu2204-gcc:
        stage: build
        image: gitlab.mpi-magdeburg.mpg.de/ci-images/minimal/ubuntu:jammy
        script:
                - apt update; apt install --yes git
                - apt-get install --yes cmake libhdf5-dev zlib1g-dev libbz2-dev liblzma-dev libzstd-dev
                - mkdir -p build
                - cd build
                - cmake ../ -DDEBUG=ON
                - make
                - make test


centos8-gcc:
        stage: build
        image: gitlab.mpi-magdeburg.mpg.de/ci-images/minimal/centos:8-base
        script:
                - yum -y install hdf5-devel zlib-devel bzip2-devel xz-devel
                - mkdir -p build
                - cd build
                - cmake .. -DDEBUG=ON
                - make
                - make test


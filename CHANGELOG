next
----
- Import LAPACK 3.12.1
- Support for LAPACKE
- Better support for CBLAS
- Reduce the number of files to compile.
- Unnecessary printf in set_num_threads.c #64
- Remove some GPL leftovers
- Fix GNU Octave interface with Octave >= 10
- Fix usage of AMD BLIS with AOCL_DTL enabled
- Correct handling of MKL_Set_Num_Threads
- Add MKL_Get_Max_Threads to maintain compatability
- Fix compiler flags for GNU GCC on Apple Silicon
- Find ATLAS and threaded ATLAS correctly on Fedora
- Fix running the test with different backends.
- Fixes from GITHUB:
 - Compiliation on MacOS GH #35
 - useless printf GH #64
 - F2C typo in main CMakeLists.txt GH #66
 - GEMMTR test error GH #63
 - Add C++ support to header files GH #69
 - Detect F2C API for float return values


3.4.5 (January 30, 2025)
------------------------
- Fix cblas scnrm2 typo (See GH #54)
- Consistent indentation (See GH #55)
- Fix some typos (See GH #56)
- Support for NVPL BLAS
- Fix bug in xAXPBY with ALPHA = BETA = 0.0
- Add different symbols nameing schemens in parallel
- Add support for xGEMMT/xGEMMTR
- Fix all disclaimers to match the SPDX identifier
- Fix building the auxillary library on Apple MacOS X (GH#61)
- Fix underlinkage with GCC 15 and glibc, (GH #62)
- Fix: detect wrong MKL/TBB without crashing the build process.

3.4.4 (May 24, 2024)
--------------------
- Symbols from precompiled libaries (NETLIB BLAS and LAPACK) are not properly
  integrated. See Github #52

3.4.3 (May 21, 2024)
-------------------
- new header file `include/flexiblas/flexiblas_fortran_char_len.h`
- Various bugfixes with Intel Classic and OneAPI compilers (Closes GH: #49)
- remove duplicate '/' when searchin for shared objects
- working with clang and flang (LLVM)
- working with AMD AOCC.
- Integer overflow in AXPBY with INTEGER8=ON fixed.
- runtime detection of the complex return value API
- runtime detection of the integer size in the backend
- Fix typo. (Closes GH: #50)
- Fix LTO type mismatch (except of contributed LAPACK sources and tests)
  (Closes: #51)
- New config option "-DLTO=ON/OFF"

3.4.2 (February 28, 2024)
-------------------------
- Wrong BLAS detection with INTEGER8=ON
- Wrong filenames in INTEGER8 Build
- Fix hidden Fortran arguments in all routines. Fixes Github Issue #45

3.4.1 (January 10, 2023)
------------------------
- Fix uninitialized values in C/ZGEQP3RK existing in LAPACK 3.12.0.
- Fix uninitialized values in LAPACK-Testing for VERSION 3.12.0.

3.4.0 (January 9, 2023)
-----------------------
- Fix custom MKL building, GH #42
- Import LAPACK 3.12.0 (including PR#959 from Github for DMD tests)
- Change license to LGPLv3+

3.3.1 (April 3, 2023)
---------------------
- Fix non-strict prototypes detected by clang 15+
- Fix GH #34: Search Intel MKL-TBB in oneAPI based installations
- Fix GH #35: Error on codegen with prototypes on macOS X

3.3.0 (December 19, 2022)
-------------------------
- Import LAPACK 3.11.0
- Fix issues with non-standard C code (-Wpedantic)
- Fix issues with non-strict protypes in C (-Wstrict-prototypes)
- Add Intel MKL packages on Debian based systems

3.2.1 (July 12, 2022)
---------------------
- Fix compilation bug in MacOS X (GH: #30)

3.2.0 (May 17, 2022)
----------------------
- Import LAPACK 3.10.1
  This is the first LAPACK release, where two routines (dcombssq and scombssq)
  are removed without being deprecated before. Normally, this should not be a
  problem since these routines are only used internally.
- The integers in the CBLAS interface are now represented by CBLAS_INT, which
  is set to `int` by default.
- Fix: executing the test summary code in the correct directory.
- Fix: some typos in messages
- Fix: GH #27 Paths in Find*.cmake scripts

3.1.3 (February 25, 2022)
-------------------------
- Close GH #22: Wrong -verbose flag in CXXFLAGS
- Merge GH PR #24 / Close GH #23
- Close GH #21: Int instead of int in standalone API
- Rename fortran_mangle.h flexiblas_fortran_mangle.h

3.1.2 (January 17, 2022)
-----------------------
- flexiblas-config does not get the correct filename if -DINTEGER8=ON


3.1.1 (January 17, 2022)
-----------------------
- Fix wrong so-version for libflexiblas.so

3.1.0 (January 16, 2022)
-----------------------
- Closes GH #19, added LINK_OPENMP option
- Import LAPACK 3.10.0
- Closes #119: Make stack protection flags the default setting.
- Add the backend builder tool in tool/backend_builder
- Import LAPACK 3.9.1
- Closes #108: NumPy-SciPy Test added.
- Closes #112: Build failure on MacOS (GH: #10)
- Closes GH #15: silly typo
- Closes GH #16: MKL now searched in the MKLROOT.
   In order to make some command line options clearer MKL_CUSTOM is renamed
   to MKL_BUILDER
- New example: quick return benchmark on x86_64

3.0.4 (October 22nd, 2020)
--------------------------
- Closes #107: DCABS1 and SCABS1 missing
- Closes #105: Could not compile on FreeBSD
- Closes #104: Missing prefix in some outputs of xerbla.c
- Closes #103: GH #7 - LAPACK decompositions do not run in parallel
- Closes #102: GH #6 - Wrong return type.

3.0.3 (August 28th, 2020)
-------------------------
- Closes #101: DLAMC3 and SLAMC3 missing

3.0.2 (July 23rd, 2020)
-----------------------
- Close #99: Auto generation text removed.
- Close #100: Code generators included.

3.0.1 (July 17th, 2020)
------------------
- Close #97; CBLAS functions missed hook support
- Close #92: CBLAS works with 64bit integer values on big-endian
- Close #94: LSAMEN with implicit casting returns wrong values on big-endian
             systems.
- Close #95: Failed looking up symbols from hooks when used from Python
- Close #91: Manpages still reference GPLv2+

3.0.0 (June, 2020)
------------------
- Remove useless NETLIB64 config option
- Update to LAPACK 3.9.0
- Update LAPACK 3.7.0 to 3.7.1 Due to the fact that the ABI is the same and
  LAPACK 3.7.1 is only a bug fix release the LAPACK API Version 3.7.0 and 3.7.1
  will give the same interface and the same fallback backend from LAPACK 3.7.1
- Fix #72 - Default BLAS can be set using FLEXIBLAS_DEFAULT_BLAS at compile time
- Fix #74 - FLEXIBLAS_CONFIG environment variable to supply a local config
- Internal PATH management redesigned, FLEXIBLAS_LIBRARY_PATH introduced.
- Support for per function hooks.
- CMake minimum version 3.0.0
- New property: nolapack, prevent FlexiBLAS from loading LAPACK from the
  backend. In this way the LAPACK implementation from FlexiBLAS will be used
  and a full profile can be generated.
- hooks handled via the flexiblas tool
- 32 and 64 bit integer version does not shared binaries or configuration
- A precompiled reference BLAS and LAPACK implementation can be used during
  compilation.
- libcscutils is now compiled and linked with -fvisibility=hidden to avoid
  linking libcscutils when linking with flexiblas
- OpenBLAS from Debian/Ubuntu/RHEL/Fedora is found properly in all versions.

2.0.0 (March, 2017)
-----------------
- Fixed: Bug/Crash if default backend does not exist
- New Benchmark Tool (AXPY,GEMM,GEMV unified, latency tests)
- Rewrite the FlexiBLAS tool to use a common management library.
- Include LAPACK Interface (Maximum API Level 3.7.0)
- Update CBLAS tests to current versions
- Many fixes and code rewrites

1.3.0 (November, 2015)
---------------------
- Add s/d/c/z geadd function from ATLAS/OpenBLAS
- Allow to overload BLAS functions using hooks.
- Runtime switching of BLAS libraries.
- Profiling information in now held in the structure of the corresponding BLAS
  functions, but accumulated in the end.
- Configuration is done using libcscutils/ini, i.e., we have an ini-file like
  configuration system.
- flexiblas command line tool redesigned.
- BLAS routines can be replaced in the backends. See src/backends/demo/backend.c
  for details.
- The wrapper are generated via code generation software.
- Different integer sizes are supported. Each routine comes with a default
  integer variant (which is either 32 or 64 bit selected at compile time.) and
  additionally a 32 and 64 bit interface. (experimental, please do not use in
  production code)
- Code cleanup
- Octave Interface
- 32 and 64 bit version with separated environment variables and configurations

1.2.0 (November, 2014)
-----------------------
- add s/d/c/z axpby as BLAS extension (Like in OpenBLAS or MKL)
- add s/d/c/z omatcopy as BLAS extension, following both APIs (OpenBLAS and MKL)
- add s/d/c/z imatcopy as BLAS extension, following both APIs (OpenBLAS and MKL)
- new configure option: -DDEV=ON/OFF  to enable development builds the run only
  in the build directory. Default is OFF.
- user supplied XERBLA functions now work with ACML and MKL
- add CBLAS tests
- working 8-byte integer support


1.1.1 (October, 2014)
-----------------
- fix DCABS1

1.1.0 (September, 2014)
-----------------------
- rewrite internal function for handling the shared objects.
- include first parts of the Win32 and Win64 compatibility
- integrated the profiling in the normal library.
- Using -DABI=Intel the library is configured to provide an ifort
  compatible interface. The name of the library changes to libflexblas_intel.so


1.0.1 (April 30th, 2014)
------------------------
- Fixed SCABS1


1.0.0 ( January 2014 )
----------------------
 Initial Release
